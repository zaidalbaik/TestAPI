// <auto-generated />
using System;
using MQRS_lib.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CQRS_lib.Migrations
{
    [DbContext(typeof(APIDbContext))]
    [Migration("20231129031009_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MQRS_lib.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<int?>("DepartmentNumber")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments", (string)null);

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DepartmentName = "Managing department"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DepartmentName = "Financial department"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DepartmentName = "IT department"
                        },
                        new
                        {
                            DepartmentId = 4,
                            DepartmentName = "HRs department"
                        });
                });

            modelBuilder.Entity("MQRS_lib.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("EmployeeId")
                        .HasAnnotation("Relational:JsonPropertyName", "id");

                    b.Property<DateTime?>("DateDeleted")
                        .HasColumnType("datetime2");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasAnnotation("Relational:JsonPropertyName", "departmentId");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasAnnotation("Relational:JsonPropertyName", "email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasAnnotation("Relational:JsonPropertyName", "firstName");

                    b.Property<DateTime?>("HireDate")
                        .IsRequired()
                        .HasColumnType("datetime2")
                        .HasAnnotation("Relational:JsonPropertyName", "hireDate");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)")
                        .HasAnnotation("Relational:JsonPropertyName", "imagePath");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasAnnotation("Relational:JsonPropertyName", "lastName");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasAnnotation("Relational:JsonPropertyName", "phoneNumber");

                    b.Property<float>("Salary")
                        .HasColumnType("real")
                        .HasAnnotation("Relational:JsonPropertyName", "salary");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Email = "zaid@g.com",
                            FirstName = "zaid",
                            HireDate = new DateTime(2023, 11, 29, 6, 10, 9, 182, DateTimeKind.Local).AddTicks(7087),
                            IsDeleted = false,
                            LastName = "albaik",
                            PhoneNumber = "0790000000",
                            Salary = 1000f
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Email = "ali@g.com",
                            FirstName = "ali",
                            HireDate = new DateTime(2023, 11, 29, 6, 10, 9, 182, DateTimeKind.Local).AddTicks(7108),
                            IsDeleted = false,
                            LastName = "albaik",
                            PhoneNumber = "0790000000",
                            Salary = 2000f
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Email = "ahmad@g.com",
                            FirstName = "ahmad",
                            HireDate = new DateTime(2023, 11, 29, 6, 10, 9, 182, DateTimeKind.Local).AddTicks(7111),
                            IsDeleted = false,
                            LastName = "albaik",
                            PhoneNumber = "0790000000",
                            Salary = 3000f
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            Email = "mohammad@g.com",
                            FirstName = "mohammad",
                            HireDate = new DateTime(2023, 11, 29, 6, 10, 9, 182, DateTimeKind.Local).AddTicks(7113),
                            IsDeleted = false,
                            LastName = "albaik",
                            PhoneNumber = "0790000000",
                            Salary = 4000f
                        });
                });

            modelBuilder.Entity("MQRS_lib.Models.Employee", b =>
                {
                    b.HasOne("MQRS_lib.Models.Department", "Department")
                        .WithMany("Employees")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("DepartmentId_FK");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MQRS_lib.Models.Department", b =>
                {
                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
